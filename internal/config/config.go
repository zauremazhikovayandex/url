package config

import (
	"flag"
	"fmt"
	"os"
)

var AppConfig *Config

type Config struct {
	ServerAddr  string
	BaseURL     string
	FileStorage string
}

func InitConfig() {
	// –ü–∞—Ä—Å–∏–º —Ñ–ª–∞–≥–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
	serverAddrFlag := flag.String("a", "", "port to run server")
	baseURLFlag := flag.String("b", "", "base URL for short links")
	fileStorageFlag := flag.String("f", "", "file storage")
	flag.Parse()

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	serverAddr := ":8080"
	baseURL := "http://localhost:8080"
	fileStorage := "url_history.json"

	// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–ª–∞–≥–∞–º–∏
	if *serverAddrFlag != "" {
		serverAddr = *serverAddrFlag
	}
	if *baseURLFlag != "" {
		baseURL = *baseURLFlag
	}
	if *fileStorageFlag != "" {
		fileStorage = *fileStorageFlag
	}

	// –û–∫—Ä—É–∂–µ–Ω–∏–µ–º (–∏–º–µ–µ—Ç —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
	if env := os.Getenv("SERVER_ADDRESS"); env != "" {
		serverAddr = env
	}
	if env := os.Getenv("BASE_URL"); env != "" {
		baseURL = env
	}
	if env := os.Getenv("FILE_STORAGE_PATH"); env != "" {
		fileStorage = env
	}

	AppConfig = &Config{
		ServerAddr:  serverAddr,
		BaseURL:     baseURL,
		FileStorage: fileStorage,
	}

	fmt.Println("üíæ Using file storage path:", AppConfig.FileStorage) // –æ—Ç–ª–∞–¥–∫–∞
}
